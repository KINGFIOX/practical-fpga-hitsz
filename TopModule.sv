// Generated by CIRCT firtool-1.62.1
module TopModule(
  input        clock,
               reset,
               io_sw,
               io_k,
  output [7:0] io_led
);

  reg [7:0]  led;
  reg [25:0] cnt_value;
  reg [1:0]  last;
  always @(posedge clock) begin
    if (reset) begin
      led <= 8'h0;
      cnt_value <= 26'h0;
      last <= 2'h0;
    end
    else if (cnt_value == 26'h2FAF07F) begin
      automatic logic _GEN;
      automatic logic _GEN_0;
      automatic logic _GEN_1;
      automatic logic _GEN_2;
      _GEN = io_k & io_sw;
      _GEN_0 = io_k & ~io_sw;
      _GEN_1 = ~io_k & io_sw;
      _GEN_2 = ~io_k & ~io_sw;
      if (led == 8'h0 | last != {io_sw, io_k}) begin
        if (_GEN_2)
          led <= 8'h80;
        else if (_GEN_1)
          led <= 8'h1;
        else if (_GEN_0)
          led <= 8'h18;
        else if (_GEN)
          led <= 8'h81;
      end
      else if (_GEN_2)
        led <= {led[0], led[7:1]};
      else if (_GEN_1)
        led <= {led[6:0], led[7]};
      else if (_GEN_0)
        led <= {led[6:4], led[7], led[0], led[3:1]};
      else if (_GEN)
        led <= {led[4], led[7:5], led[2:0], led[3]};
      cnt_value <= 26'h0;
      last <= {io_sw, io_k};
    end
    else
      cnt_value <= cnt_value + 26'h1;
  end // always @(posedge)
  assign io_led = led;
endmodule

